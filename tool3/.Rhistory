x2 <- x %>% filter(MonthvsWeek=="Week", `Visitor or Client` == "total",
!is.na(`Product page MC`),
`Last Touch Marketing Channel` != "::unspecified::",
!is.na(`Last Touch Marketing Channel`),
!is.na(Date)) %>%
select(MonthvsWeek, `Product page MC`, `Last Touch Marketing Channel`) %>%
spread(`Last Touch Marketing Channel`, `Product page MC`)
x2 <- x %>% filter(MonthvsWeek=="Week", `Visitor or Client` == "total",
!is.na(`Product page MC`),
`Last Touch Marketing Channel` != "::unspecified::",
!is.na(`Last Touch Marketing Channel`),
!is.na(Date)) %>%
select(MonthvsWeek, Date, `Product page MC`, `Last Touch Marketing Channel`) %>%
spread(`Last Touch Marketing Channel`, `Product page MC`)
runApp('dynamic_input.R')
runApp()
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp()
runApp('dynamic_input.R')
runApp('dynamic_input.R')
try_traf <- read_csv("./HL_traf_tool3.csv")
#try_month <- read_csv("./HL_conv_month_tool3.csv")
#try_week <- read_csv("./HL_conv_week_tool3.csv")
conv_tot <- read_csv("./HL_conv_tool3.csv")
conv_sales <- read_csv("./HL_conv_tool34.csv")
conv_markchan <- read_csv("./HL_conv_tool35.csv")
testing <- read_csv("./testing.csv")
testing <- testing %>%
dplyr::filter(`Visitor or Client` !="::unspecified::") %>%
dplyr::filter(`Visitor or Client` !="None")
x <- as.data.frame(testing)
#z <- as.data.frame(try_month)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp()
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp()
runApp('dynamic_input.R')
x <- as.data.frame(testing)
runApp('dynamic_input.R')
x2 <- x %>% filter(!is.na(`Start application CvnC`),)
x2 <- x %>% filter(!is.na(`Start application CvnC`),)
x2 <- x2 %>% filter(!is.na(Sales))
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
shiny::runApp()
runApp('dynamic_input.R')
runApp('dynamic_input.R')
datalala <- filter(x, !is.na(Sales),
!is.na(`Start application CvnC`),
MonthvsWeek == input$MonthvsWeek,
Date == input$Date
)
testing <- read_csv("./testing.csv")
testing <- testing %>%
dplyr::filter(`Visitor or Client` !="::unspecified::") %>%
dplyr::filter(`Visitor or Client` !="None")
x <- as.data.frame(testing)
datalala <- filter(x, !is.na(Sales),
!is.na(`Start application CvnC`),
MonthvsWeek == input$MonthvsWeek,
Date == input$Date
)
rlang::last_error()
datalala <- filter(x, !is.na(Sales),
!is.na(`Start application CvnC`),
MonthvsWeek == input$MonthvsWeek,
Date == input$Date
)
runApp('dynamic_input.R')
datalala <- filter(x, !is.na(Sales),
!is.na(`Start application CvnC`),
MonthvsWeek == input$MonthvsWeek,
Date == input$Date
)
datalala <- filter(x, !is.na(Sales),
!is.na(`Start application CvnC`),
MonthvsWeek == "Week",
Date == "2022-03-07"
)
View(datalala)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
datalala <- filter(x,
unique(!is.na(Sales)),
!is.na(`Start application CvnC`),
MonthvsWeek == "Week",
Date == "2022-03-07"
]
datalala <- filter(x,
unique(!is.na(Sales)),
unique(!is.na(`Start application CvnC`)),
MonthvsWeek == "Week",
Date == "2022-03-07"
) %>% distinct()
datalala <- filter(x,
!is.na(Sales),
!is.na(`Start application CvnC`),
MonthvsWeek == "Week",
Date == "2022-03-07"
) %>% distinct()
datalala <- filter(x,
!is.na(Sales),
!is.na(`Start application CvnC`),
MonthvsWeek == "Week",
Date == "2022-03-07"
) %>% distinct(Date)
View(datalala)
datalala <- filter(x,
!is.na(Sales),
!is.na(`Start application CvnC`),
MonthvsWeek == "Week",
Date == "2022-03-07"
) %>% distinct()
View(datalala)
datalala <- filter(x,
unique(!is.na(Sales)),
unique(!is.na(`Start application CvnC`)),
unique(!is.na(`Product page CvnC`)),
unique(!is.na(`Finish application CvnC`)),
MonthvsWeek == "Week",
Date == "2022-03-07"
)
datalala <- filter(x,
#unique(!is.na(Sales)),
unique(!is.na(`Start application CvnC`)),
unique(!is.na(`Product page CvnC`)),
unique(!is.na(`Finish application CvnC`)),
MonthvsWeek == "Week",
Date == "2022-03-07"
)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
View(x)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
View(datalala)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
df_dat <- filter(x,
`Visitor or Client` == "total" &
MonthvsWeek == "Month" &
!is.na(`Calculators`)) %>%
group_by(month = lubridate::floor_date(Date, 'month'))
View(df_dat)
runApp('dynamic_input.R')
testing <- read_csv("./testing.csv")
testing <- testing %>%
dplyr::filter(`Visitor or Client` !="::unspecified::") %>%
dplyr::filter(`Visitor or Client` !="None")
x <- as.data.frame(testing)
df_dat <- filter(x,
`Visitor or Client` == "total" &
MonthvsWeek == "Month" &
!is.na(`Calculators`)) %>%
group_by(month = lubridate::floor_date(Date, 'month'))
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp()
runApp('dynamic_input.R')
runApp('dynamic_input.R')
testing <- read_csv("./testing.csv")
x <- as.data.frame(testing)
runApp('dynamic_input.R')
View(x)
x1 <- x %>% filter(!is.na(con_1_CvnC))
x1 <- x1 %>% filter(`Last Touch Marketing Channel`=="Direct")
View(x1)
x1 <- x1 %>% filter(`Last Touch Marketing Channel`=="")
x1 <- x %>% filter(!is.na(con_1_CvnC))
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
testing <- read_csv("./testing.csv")
#testing <- testing %>%
#  dplyr::filter(`Visitor or Client` !="::unspecified::") %>%
#  dplyr::filter(`Visitor or Client` !="None")
x <- as.data.frame(testing)
round(x$con_1_CvnC)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
plot(x1$`Visitor or Client`, x1$con_1_CvnC)
plot(x1$`Visitor or Client`, x1$con_1_CvnC, rm.na=T)
hist(x1$`Visitor or Client`, x1$con_1_CvnC, rm.na=T)
line(x1$`Visitor or Client`, x1$con_1_CvnC, rm.na=T)
runApp()
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
testing <- read_csv("./testing.csv")
#testing <- testing %>%
#  dplyr::filter(`Visitor or Client` !="::unspecified::") %>%
#  dplyr::filter(`Visitor or Client` !="None")
x <- as.data.frame(testing)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp()
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
x1 <- x %>% filter(!is.na(con_1_CvnC), `Visitor or Client` != "None")
x1 <- x %>% filter(!is.na(con_1_CvnC), `Visitor or Client` != "None", MonthvsWeek=="Week")
View(x1)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
x1 <- x%>% filter(!is.na(`Product page MC`), `Visitor or Client` == "total")
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp()
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
date
systemdate()
date()
as.Date(date())
today()
month(today())
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
unique(x$Date)
unique(x$target_PP_23)
x$target_PP_23[xDate>"2022-12-26"]
x$target_PP_23[x$Date>"2022-12-26"]
runApp('dynamic_input.R')
runApp('dynamic_input.R')
year(x$Date)
runApp('dynamic_input.R')
testing <- read_csv("./testing.csv")
#testing <- testing %>%
#  dplyr::filter(`Visitor or Client` !="::unspecified::") %>%
#  dplyr::filter(`Visitor or Client` !="None")
testing$year <- year(testing$Date)
x <- as.data.frame(testing)
View(x)
testing$year <- year(testing$Date)
testing <- testing %>%
dplyr::mutate(
target_PP_23 = case_when(
year == "2022" ~ 0,
TRUE ~ target_PP_23
)
)
x <- as.data.frame(testing)
runApp('dynamic_input.R')
df_dat <- filter(x,
`Visitor or Client` == "total" &
MonthvsWeek == "Month" &
`Last Touch Marketing Channel`=="::unspecified::",
!is.na(`Calculators`)) %>%
group_by(month = lubridate::floor_date(Date, 'month'))
View(df_dat)
unique(df_dat$Date[!is.na(df_dat$`Product page CvnC`)])
~df_dat$`Product page CvnC`
df_dat$`Product page CvnC`
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
library(haven)
library(tidyr)
library(tidyverse)
library(magrittr)
library(dplyr)
library(ggplot2)
library(psych)
library(GPArotation)
library(lm.beta)
library(mctest)
library(plotly)
library(dplyr)
library(stringr)
library(rmarkdown)
#ibrary(ingmarkdowntemplates)
library(ggplot2)
#library(ggflags)
library(lubridate)
library(png)
library(ggimage)
library(readxl)
library(tidyxl)
library(data.table)
library(zoo)
library(shiny)
library(corrr)
library(tidyverse)
library(caret)
library(car)
library(gt)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
#library(shiny)
#library(shinydashboard)
library(xfun)
library(bslib)
#library(stdlib.h)
source("functions/trend_plot_format_function.R")
source("functions/funnel_plot_format_function.R")
source("functions/time_plot_format_function.R")
source("functions/post_stamp_function.R")
source("functions/post_stamp_function_option2.R")
source("functions/tab_function.R")
testing <- read_csv("./testing.csv")
testing$year <- year(testing$Date)
testing <- testing %>%
dplyr::mutate(
target_PP_23 = case_when(
year == "2022" ~ 10,
TRUE ~ target_PP_23
)
)
x <- as.data.frame(testing)
View(x)
runApp('dynamic_input.R')
View(x)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
x1 <- x %>% filter(MonthvsWeek=="Week", `Visitor or Client`=="total", !is.na(`Product page MC`), !is.na(`Last Touch Marketing Channel`))
View(x1)
runApp('dynamic_input.R')
table(x1$`Last Touch Marketing Channel`, x1$Date)
runApp('dynamic_input.R')
unique(x1$`Last Touch Marketing Channel`[=="::unspecified::"])
unique(x1$`Last Touch Marketing Channel`[x1$`Last Touch Marketing Channel`=="::unspecified::"])
unique(x1$`Last Touch Marketing Channel`=="::unspecified::")
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
2.22*700
2.22/100
0.022*700
2.22/100
1.0222 *700
runApp('dynamic_input.R')
library(haven)
library(tidyr)
library(tidyverse)
library(magrittr)
library(dplyr)
library(ggplot2)
library(psych)
library(GPArotation)
library(lm.beta)
library(mctest)
library(plotly)
library(dplyr)
library(stringr)
library(rmarkdown)
#ibrary(ingmarkdowntemplates)
library(ggplot2)
#library(ggflags)
library(lubridate)
library(png)
library(ggimage)
library(readxl)
library(tidyxl)
library(data.table)
library(zoo)
library(shiny)
library(corrr)
library(tidyverse)
library(caret)
library(car)
library(gt)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
#library(shiny)
#library(shinydashboard)
library(xfun)
library(bslib)
#library(stdlib.h)
source("functions/trend_plot_format_function.R")
source("functions/funnel_plot_format_function.R")
source("functions/time_plot_format_function.R")
source("functions/post_stamp_function.R")
source("functions/post_stamp_function_option2.R")
source("functions/tab_function.R")
# For high level traffic
#try_traf <- read_csv("./HL_traf_tool3.csv")
#try_month <- read_csv("./HL_conv_month_tool3.csv")
#try_week <- read_csv("./HL_conv_week_tool3.csv")
#conv_tot <- read_csv("./HL_conv_tool3.csv")
#conv_sales <- read_csv("./HL_conv_tool34.csv")
#conv_markchan <- read_csv("./HL_conv_tool35.csv")
testing <- read_csv("./testing.csv")
testing$year <- year(testing$Date)
testing <- testing %>%
dplyr::mutate(
target_PP_23 = case_when(
year == "2022" ~ 10,
TRUE ~ target_PP_23
)
)
x <- as.data.frame(testing)
View(x)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
22/6
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
colnames(x)
runApp('dynamic_input.R')
colnames(x)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
unique(x$`Last Touch Marketing Channel`)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
unique(x$`Last Touch Marketing Channel`)
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
library(shiny); runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
library(shiny); runApp('dynamic_input.R')
runApp('dynamic_input.R')
library(shiny); runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
library(shiny); runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
library(shiny); runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
library(shiny); runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
library(shiny); runApp('dynamic_input.R')
runApp('dynamic_input.R')
library(shiny); runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
library(shiny); runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
runApp('dynamic_input.R')
